<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常见问题</title>
      <link href="/2021/09/01/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2021/09/01/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="History-对象方法"><a href="#History-对象方法" class="headerlink" title="History 对象方法"></a>History 对象方法</h2><p>加载 history 列表中的前一个 URL。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history.back()</span><br></pre></td></tr></table></figure><p>加载 history 列表中的下一个 URL。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history.forward()</span><br></pre></td></tr></table></figure><p>加载 history 列表中的某个具体页面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history.go()</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Js中常见问题"><a href="#Js中常见问题" class="headerlink" title="Js中常见问题"></a>Js中常见问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象合并，还可用于对简单对象的深拷贝</span></span><br><span class="line"><span class="built_in">Object</span>.assign(target, source)</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组排序,不加参数是按照字符编码进行排序</span></span><br><span class="line"><span class="comment">//如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。</span></span><br><span class="line"><span class="comment">//比较函数应该具有两个参数 a 和 b，其返回值如下：</span></span><br><span class="line"><span class="comment">//若 a 小于 b，在排序后的数组中 a 应该出现在 b 之前，则返回一个小于 0 的值。</span></span><br><span class="line"><span class="comment">//若 a 等于 b，则返回 0。</span></span><br><span class="line"><span class="comment">//若 a 大于 b，则返回一个大于 0 的值。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumAscSort</span>(<span class="params">a,b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NumDescSort</span>(<span class="params">a,b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> b - a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>( <span class="number">3600</span>, <span class="number">5010</span>, <span class="number">10100</span>, <span class="number">801</span>); </span><br><span class="line">arr.sort(NumDescSort);</span><br><span class="line">alert(arr);</span><br><span class="line">arr.sort(NumAscSort);</span><br><span class="line">alert(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组去重</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>]</span><br><span class="line"><span class="keyword">let</span> r = <span class="keyword">new</span> set(arr)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><h4 id="混入"><a href="#混入" class="headerlink" title="混入"></a>混入</h4><h4 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h4><h4 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h4><h4 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h4><h5 id="vuex中，有默认的五种基本的对象："><a href="#vuex中，有默认的五种基本的对象：" class="headerlink" title="vuex中，有默认的五种基本的对象："></a>vuex中，有默认的五种基本的对象：</h5><p>state：存储状态（变量）<br>getters：对数据获取之前的再次编译，可以理解为state的计算属性。我们在组件中使用 $sotre.getters.fun()<br>mutations：修改状态，并且是同步的。在组件中使用$store.commit(‘’,params)。这个和我们组件中的自定义事件类似。<br>actions：异步操作。在组件中使用是$store.dispath(‘’)<br>modules：store的子模块，为了开发大型项目，方便状态管理而使用的。这里我们就不解释了，用起来和上面的一样。</p><p><a href="https://zhuanlan.zhihu.com/p/100941659">https://zhuanlan.zhihu.com/p/100941659</a></p><h4 id="router-传参的方式"><a href="#router-传参的方式" class="headerlink" title="router 传参的方式"></a>router 传参的方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// params 方式</span></span><br><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="comment">//router-link 传参（在路径中显示，刷新不会丢失参数）</span></span><br><span class="line"><span class="comment">//路由配置</span></span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/path/:id&#x27;</span></span><br><span class="line"><span class="comment">//传值方式</span></span><br><span class="line">&lt;rouer-link :to=<span class="string">`/path/<span class="subst">$&#123;id&#125;</span>`</span> /&gt;</span><br><span class="line"><span class="comment">//获取参数</span></span><br><span class="line">$route.params.id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="comment">//编程式传参 ,通过path匹配路由（在路径中显示，刷新不会丢失参数）</span></span><br><span class="line"><span class="comment">//路由配置</span></span><br><span class="line"><span class="attr">path</span>:<span class="string">&#x27;/path/:id&#x27;</span></span><br><span class="line"><span class="comment">//传值方式，在方法中使用</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">`/path/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取参数</span></span><br><span class="line"><span class="built_in">this</span>.$route.params.id</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//编程式传参 ,通过name匹配路由（不在路径中显示，刷新会丢失参数）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//传值方式，在方法中使用</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;name&#x27;</span>, <span class="comment">//路由配置中的name</span></span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取参数</span></span><br><span class="line"><span class="built_in">this</span>.$route.params.id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// query 方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.  router-link 传参（在路径中显示参数，刷新不丢失）</span></span><br><span class="line">&lt;router-link :to=<span class="string">&quot;&#123;path:&#x27;/path&#x27;,query:&#123;id:123&#125;&#125;&quot;</span>&gt;&lt;/router-link&gt;</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&#x27;/path?id=123&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取参数</span></span><br><span class="line"><span class="built_in">this</span>.$router.query.id</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line"><span class="comment">//  编程式 传参   通过path匹配（在路径中？后面显示参数，刷新不丢失）</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/path&#x27;</span>,</span><br><span class="line">    <span class="attr">query</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取参数</span></span><br><span class="line"><span class="built_in">this</span>.$router.query.id</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line"><span class="comment">//  编程式 传参   通过name匹配（在路径中？后面显示参数，刷新不丢失）</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">    <span class="attr">query</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取参数</span></span><br><span class="line"><span class="built_in">this</span>.$router.query.id</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：params和query方式都差不多，但通过name匹配路由传参，params方式刷新会丢失数据</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/09/01/hello-world/"/>
      <url>/2021/09/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><span id="more"></span><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nuxt.js的常见问题处理</title>
      <link href="/2021/07/27/nuxt-js%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
      <url>/2021/07/27/nuxt-js%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="npx"><a href="#npx" class="headerlink" title="npx"></a>npx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx create-nuxt-app &lt;project-name&gt;</span><br></pre></td></tr></table></figure><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init nuxt-app &lt;project-name&gt;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>现在新创建的nuxt项目少了很多文件夹，需要的时候可以手动创建<br>例如，已经没有layouts文件夹，需要手动修改default.vue的话，需要手动创建，然后再创建default.vue文件</p><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
